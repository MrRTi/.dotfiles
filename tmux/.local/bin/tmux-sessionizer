#!/usr/bin/env bash

SESSION_FOLDERS=${SESSION_FOLDERS:-"$HOME $HOME/repo/*"}

__fzf_preview_tool() {
  if command -v eza >/dev/null 2>&1; then
    echo 'eza'
  else
    echo 'ls'
  fi
}

__fzf() {
  fzf --ansi --tmux bottom,75% --preview "$(__fzf_preview_tool) -la --color=always \$(echo {} | sed \"s:~:$HOME:\")"
}

__select_folder() {
  sed "s:$HOME:~:" | \
    awk '{printf "\x1b[33m%s\x1b[0m\n", $1}' | \
    __fzf | \
    sed "s:~:$HOME:"
}

__session_path() {
  if [ -n "$1" ]; then
    echo "$1"
  elif command -v fd >/dev/null 2>&1; then
    fd --type d --min-depth=0 --max-depth=1 --follow . $(echo ${SESSION_FOLDERS}) 2>/dev/null | \
      { echo $HOME; cat; } | \
      __select_folder
  else
    find $(echo ${SESSION_FOLDERS}) -mindepth 0 -maxdepth 1 -type d | \
      __select_folder
  fi
}

SESSION_PATH=$(__session_path "$1")

# NOTE: Tmux automaticaly replacing . to _ if session name starts with .
# It prevents to find session for folder using folder name if folder have . as first symbol
# We will use this conversion to have consistent session names on attach and create
SESSION_NAME=$(basename "${SESSION_PATH}" | tr . _)

if ! tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
  TMUX='' tmux new -c "${SESSION_PATH}" -s "${SESSION_NAME}" -d
fi

if [ -n "${TMUX}" ]; then
  tmux switch -t "$SESSION_NAME"
else
  tmux attach -t "$SESSION_NAME"
fi
